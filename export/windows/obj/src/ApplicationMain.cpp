// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_ApplicationMain
#include <ApplicationMain.h>
#endif
#ifndef INCLUDED_DocumentClass
#include <DocumentClass.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_ManifestResources
#include <ManifestResources.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_system_FlxBasePreloader
#include <flixel/system/FlxBasePreloader.h>
#endif
#ifndef INCLUDED_flixel_system_FlxPreloader
#include <flixel/system/FlxPreloader.h>
#endif
#ifndef INCLUDED_flixel_system__FlxBasePreloader_DefaultPreloader
#include <flixel/system/_FlxBasePreloader/DefaultPreloader.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Int_Void
#include <lime/app/_Event_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_lime_utils_AssetLibrary
#include <lime/utils/AssetLibrary.h>
#endif
#ifndef INCLUDED_lime_utils_Preloader
#include <lime/utils/Preloader.h>
#endif
#ifndef INCLUDED_openfl_display_Application
#include <openfl/display/Application.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_Preloader
#include <openfl/display/Preloader.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_display_Window
#include <openfl/display/Window.h>
#endif
#ifndef INCLUDED_openfl_events_ActivityEvent
#include <openfl/events/ActivityEvent.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_FullScreenEvent
#include <openfl/events/FullScreenEvent.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_b3b993f62d801895_391___init__,"::ApplicationMain_obj","__init__",0x253d991d,"::ApplicationMain_obj.__init__","ApplicationMain.hx",391,0x0780ded5)
HX_LOCAL_STACK_FRAME(_hx_pos_6fcf922b66429816_21_main,"ApplicationMain","main",0x93d2f73e,"ApplicationMain.main","ApplicationMain.hx",21,0x0780ded5)
HX_LOCAL_STACK_FRAME(_hx_pos_6fcf922b66429816_193_create,"ApplicationMain","create",0x2f7db141,"ApplicationMain.create","ApplicationMain.hx",193,0x0780ded5)
HX_LOCAL_STACK_FRAME(_hx_pos_6fcf922b66429816_196_create,"ApplicationMain","create",0x2f7db141,"ApplicationMain.create","ApplicationMain.hx",196,0x0780ded5)
HX_LOCAL_STACK_FRAME(_hx_pos_6fcf922b66429816_199_create,"ApplicationMain","create",0x2f7db141,"ApplicationMain.create","ApplicationMain.hx",199,0x0780ded5)
HX_LOCAL_STACK_FRAME(_hx_pos_6fcf922b66429816_106_create,"ApplicationMain","create",0x2f7db141,"ApplicationMain.create","ApplicationMain.hx",106,0x0780ded5)
HX_LOCAL_STACK_FRAME(_hx_pos_6fcf922b66429816_260_start,"ApplicationMain","start",0x45b5d9bd,"ApplicationMain.start","ApplicationMain.hx",260,0x0780ded5)

void ApplicationMain_obj::__construct() { }

Dynamic ApplicationMain_obj::__CreateEmpty() { return new ApplicationMain_obj; }

void *ApplicationMain_obj::_hx_vtable = 0;

Dynamic ApplicationMain_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ApplicationMain_obj > _hx_result = new ApplicationMain_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ApplicationMain_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4a39ff89;
}

void ApplicationMain_obj::__init__(){
            	HX_STACKFRAME(&_hx_pos_b3b993f62d801895_391___init__)
HXDLIN( 391)		 ::Dynamic init = hx::ClassOf< ::lime::app::Application >();
            	}


void ApplicationMain_obj::main(){
            	HX_STACKFRAME(&_hx_pos_6fcf922b66429816_21_main)
HXLINE(  25)		::lime::_hx_system::System_obj::_hx___registerEntryPoint(HX_("FrozenLight",f6,2a,15,02),::ApplicationMain_obj::create_dyn());
HXLINE(  32)		::ApplicationMain_obj::create(null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ApplicationMain_obj,main,(void))

void ApplicationMain_obj::create( ::Dynamic config){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::openfl::display::Preloader,preloader) HXARGC(2)
            		void _hx_run(int loaded,int total){
            			HX_GC_STACKFRAME(&_hx_pos_6fcf922b66429816_193_create)
HXLINE( 193)			preloader->update(loaded,total);
            		}
            		HX_END_LOCAL_FUNC2((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::openfl::display::Preloader,preloader) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_6fcf922b66429816_196_create)
HXLINE( 196)			preloader->start();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::openfl::display::Stage,a1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_6fcf922b66429816_199_create)
HXLINE( 199)			::ApplicationMain_obj::start(a1);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_6fcf922b66429816_106_create)
HXLINE( 108)		 ::openfl::display::Application app =  ::openfl::display::Application_obj::__alloc( HX_CTX );
HXLINE( 111)		::ManifestResources_obj::init(config);
HXLINE( 113)		app->meta->set(HX_("build",2e,db,ea,ba),HX_("4",34,00,00,00));
HXLINE( 114)		app->meta->set(HX_("company",3d,15,69,83),HX_("Sean Bashaw",0b,9a,11,e3));
HXLINE( 115)		app->meta->set(HX_("file",7c,ce,bb,43),HX_("FrozenLight",f6,2a,15,02));
HXLINE( 116)		app->meta->set(HX_("name",4b,72,ff,48),HX_("FrozenLight",f6,2a,15,02));
HXLINE( 117)		app->meta->set(HX_("packageName",f1,04,ad,04),HX_("com.example.myapp",84,30,57,c1));
HXLINE( 121)		 ::Dynamic attributes =  ::Dynamic(hx::Anon_obj::Create(16)
            			->setFixed(0,HX_("resizable",6b,37,50,a9),true)
            			->setFixed(1,HX_("allowHighDPI",92,07,a2,b4),false)
            			->setFixed(2,HX_("width",06,b6,62,ca),(int)640)
            			->setFixed(3,HX_("fullscreen",3b,3a,b4,f9),false)
            			->setFixed(4,HX_("maximized",18,0e,e1,fe),false)
            			->setFixed(5,HX_("x",78,00,00,00),null())
            			->setFixed(6,HX_("y",79,00,00,00),null())
            			->setFixed(7,HX_("height",e7,07,4c,02),(int)480)
            			->setFixed(8,HX_("element",bc,ae,54,06),null())
            			->setFixed(9,HX_("title",98,15,3b,10),HX_("FrozenLight",f6,2a,15,02))
            			->setFixed(10,HX_("alwaysOnTop",67,4d,53,16),false)
            			->setFixed(11,HX_("borderless",45,46,71,17),false)
            			->setFixed(12,HX_("minimized",86,fb,9d,28),false)
            			->setFixed(13,HX_("frameRate",ad,11,25,39),(int)60)
            			->setFixed(14,HX_("hidden",6a,ff,95,4c),false)
            			->setFixed(15,HX_("parameters",aa,be,7e,51), ::Dynamic(hx::Anon_obj::Create(0))));
HXLINE( 143)		attributes->__SetField(HX_("context",ef,95,77,19), ::Dynamic(hx::Anon_obj::Create(8)
            			->setFixed(0,HX_("stencil",fc,bd,03,80),true)
            			->setFixed(1,HX_("depth",03,f1,29,d7),true)
            			->setFixed(2,HX_("colorDepth",a0,08,96,fb),(int)32)
            			->setFixed(3,HX_("background",ee,93,1d,26),(int)0)
            			->setFixed(4,HX_("vsync",d1,2d,a8,3d),true)
            			->setFixed(5,HX_("antialiasing",f4,16,b3,48),(int)0)
            			->setFixed(6,HX_("type",ba,f2,08,4d),null())
            			->setFixed(7,HX_("hardware",a8,e2,d3,75),true)),hx::paccDynamic);
HXLINE( 156)		if (hx::IsNull( app->_hx___window )) {
HXLINE( 158)			if (hx::IsNotNull( config )) {
HXLINE( 160)				int _g = (int)0;
HXDLIN( 160)				::Array< ::String > _g1 = ::Reflect_obj::fields(config);
HXDLIN( 160)				while((_g < _g1->length)){
HXLINE( 160)					::String field = _g1->__get(_g);
HXDLIN( 160)					_g = (_g + (int)1);
HXLINE( 162)					if (::Reflect_obj::hasField(attributes,field)) {
HXLINE( 164)						::Reflect_obj::setField(attributes,field,::Reflect_obj::field(config,field));
            					}
            					else {
HXLINE( 166)						if (::Reflect_obj::hasField( ::Dynamic(attributes->__Field(HX_("context",ef,95,77,19),hx::paccDynamic)),field)) {
HXLINE( 168)							 ::Dynamic attributes1 = attributes->__Field(HX_("context",ef,95,77,19),hx::paccDynamic);
HXDLIN( 168)							::Reflect_obj::setField(attributes1,field,::Reflect_obj::field(config,field));
            						}
            					}
            				}
            			}
HXLINE( 177)			::lime::_hx_system::System_obj::_hx___parseArguments(attributes);
            		}
HXLINE( 182)		Dynamic( app->createWindow(attributes)).StaticCast<  ::openfl::display::Window >();
HXLINE( 191)		 ::openfl::display::Preloader preloader =  ::openfl::display::Preloader_obj::__alloc( HX_CTX , ::flixel::_hx_system::FlxPreloader_obj::__alloc( HX_CTX ,null(),null()));
HXLINE( 192)		app->_hx___preloader->onProgress->add( ::Dynamic(new _hx_Closure_0(preloader)),null(),null());
HXLINE( 195)		app->_hx___preloader->onComplete->add( ::Dynamic(new _hx_Closure_1(preloader)),null(),null());
HXLINE( 199)		 ::lime::app::_Event_Void_Void preloader1 = preloader->onComplete;
HXDLIN( 199)		 ::openfl::display::Stage a1 = app->_hx___window->stage;
HXDLIN( 199)		preloader1->add( ::Dynamic(new _hx_Closure_2(a1)),null(),null());
HXLINE( 201)		{
HXLINE( 201)			int _g2 = (int)0;
HXDLIN( 201)			::Array< ::Dynamic> _g11 = ::ManifestResources_obj::preloadLibraries;
HXDLIN( 201)			while((_g2 < _g11->length)){
HXLINE( 201)				 ::lime::utils::AssetLibrary library = _g11->__get(_g2).StaticCast<  ::lime::utils::AssetLibrary >();
HXDLIN( 201)				_g2 = (_g2 + (int)1);
HXLINE( 203)				app->_hx___preloader->addLibrary(library);
            			}
            		}
HXLINE( 207)		{
HXLINE( 207)			int _g3 = (int)0;
HXDLIN( 207)			::Array< ::String > _g12 = ::ManifestResources_obj::preloadLibraryNames;
HXDLIN( 207)			while((_g3 < _g12->length)){
HXLINE( 207)				::String name = _g12->__get(_g3);
HXDLIN( 207)				_g3 = (_g3 + (int)1);
HXLINE( 209)				app->_hx___preloader->addLibraryName(name);
            			}
            		}
HXLINE( 213)		app->_hx___preloader->load();
HXLINE( 243)		int result = app->exec();
HXLINE( 246)		::lime::_hx_system::System_obj::exit(result);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ApplicationMain_obj,create,(void))

void ApplicationMain_obj::start( ::openfl::display::Stage stage){
            	HX_GC_STACKFRAME(&_hx_pos_6fcf922b66429816_260_start)
HXDLIN( 260)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 315)			{
HXLINE( 317)				 ::openfl::display::DisplayObject current = stage->getChildAt((int)0);
HXLINE( 319)				bool _hx_tmp;
HXDLIN( 319)				if (hx::IsNotNull( current )) {
HXLINE( 319)					_hx_tmp = !(::Std_obj::is(current,hx::ClassOf< ::openfl::display::DisplayObjectContainer >()));
            				}
            				else {
HXLINE( 319)					_hx_tmp = true;
            				}
HXDLIN( 319)				if (_hx_tmp) {
HXLINE( 321)					current =  ::openfl::display::MovieClip_obj::__alloc( HX_CTX );
HXLINE( 322)					stage->addChild(current);
            				}
HXLINE( 326)				 ::DocumentClass_obj::__alloc( HX_CTX ,( ( ::openfl::display::DisplayObjectContainer)(current) ));
            			}
HXLINE( 264)			stage->dispatchEvent( ::openfl::events::Event_obj::__alloc( HX_CTX ,HX_("resize",f4,59,7b,08),false,false));
HXLINE( 266)			if (stage->window->_hx___fullscreen) {
HXLINE( 268)				stage->dispatchEvent( ::openfl::events::FullScreenEvent_obj::__alloc( HX_CTX ,HX_("fullScreen",5b,ae,48,2e),false,false,true,true));
            			}
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE( 275)				stage->_hx___handleError(e);
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ApplicationMain_obj,start,(void))


ApplicationMain_obj::ApplicationMain_obj()
{
}

bool ApplicationMain_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { outValue = start_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ApplicationMain_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ApplicationMain_obj_sStaticStorageInfo = 0;
#endif

static void ApplicationMain_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ApplicationMain_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ApplicationMain_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ApplicationMain_obj::__mClass,"__mClass");
};

#endif

hx::Class ApplicationMain_obj::__mClass;

static ::String ApplicationMain_obj_sStaticFields[] = {
	HX_HCSTRING("main","\x39","\x38","\x56","\x48"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	::String(null())
};

void ApplicationMain_obj::__register()
{
	hx::Object *dummy = new ApplicationMain_obj;
	ApplicationMain_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("ApplicationMain","\x89","\xff","\x39","\x4a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ApplicationMain_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ApplicationMain_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ApplicationMain_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ApplicationMain_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ApplicationMain_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ApplicationMain_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ApplicationMain_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ApplicationMain_obj::__boot()
{
}

